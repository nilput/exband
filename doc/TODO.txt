Task                                           Done      Status

Chunked requests (POST/PUT)                    [x]      
Chunked response                               [ ]      
HTTP/1.0 compatibility                         [ ]       Somewhat
HTTP/1.1 basic functionality (GET)             [x]      
HTTP/1.1 POST/PUT/DELETE/WHATEVER              [x]
urlencode decoding                             [x]
multipart decoding                             [x]
multipart decoding tests                       [x]
Keepalive connections                          [x]      
Pipelined GET                                  [x]      
Header/Method/Version parsing                  [x]      
Response                                       [x]      
Infinite Request/Response                      [x]
Infinite No.Headers                            [ ]      
Infinite No.Sockets                            [ ]       This works with epoll
Request Timeout                                [ ]      
Request Keepalive Timeout                      [ ]      
TCP/Slow request DDOS Protection               [ ]      
Date header                                    [ ]      
logging                                        [ ]
     Log each request with ip+timestamp        [ ]
     Log errors                                [ ]
     Adjustable logging format                 [ ]
Stacktraces in places they're relevant         [ ]      
HTTP Error reasons                             [ ]      
Serving files handler                          [ ]
Serving files handler default mimetypes        [ ]
Fast threadsafe queue for threads->evloop      [ ]
Fast threadsafe queue for evloops->threadpool  [ ]
Buffering of multiple responses before write() [ ]

Support json config                            [x]

DO a periodic clean up or a MRU based cleanup  \
   of buffer recycle lists                     [ ]

DO a periodic clean up or a MRU based cleanup  \
   of request recycle lists                    [ ]



Ensure compatibility with 32bit systems        \
 (avoid long long)                             [ ]

Increase buffer size integers to a larger      \
type such as size_t, and check for             \
overflow conditions                            [ ]

 have an option of running multiple evloops,    \  
 each having its own epoll listener and doing  \
 io directly instead of having to communicate  \
 with other threads                            [x]

dont add epollout for socket immediately, only \
 do that if writing proves to be a problem for \
 a particular socket                           [ ]

 update select to fix bugs when socket no is   \
 too big new wants_read/wants_write flags and  \
 ->currently_reading being null                [ ]

 Have the input buffer owned by the multiplexer\
 rather than the request state                 [ ]

Known length streaming response                [ ]  

Multiple switchable file serve implementations \
(sendfile/read write streaming)                [ ]

A non-socket http requests input path for      \
testing / profiling                            [ ]

A non-socket http requests output path for     \
testing / profiling                            [ ]

DO A performance testing setup, that targets   \
   the event loop and the threadpool, (without \
   actual http/io events, just measuring how   \
   fast the communication/parsing is)          [ ]

codebase static analysis                       [ ]

automated profiling benchmarks during build    [ ]

listeners on multiple ports                    [ ]
rules on specific domains                      [ ]
SSL                                            [ ]
SSL SNI                                        [ ]

Seperate "HTTP Listeners" from the http server \
tree, and restructure accordingly because      \
they're actually socket listeners.             [ ]